{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/claudiaromeo/Documents/Projects/lcp-portfolio/src/components/OnePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nconst builder = imageUrlBuilder(sanityClient);\n\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport default function OnePost() {\n  _s();\n\n  const [postData, setPostData] = useState(null);\n  const {\n    slug\n  } = useParams();\n  useEffect(() => {\n    sanityClient.fetch(`*[slug.current == $slug]{\n          title,\n          slug,\n          mainImage{\n            asset->{\n              _id,\n              url\n             }\n           },\n         body,\n        \"name\": author->name,\n        \"authorImage\": author->image\n       }`, {\n      slug\n    }).then(data => setPostData(data[0])).catch(console.error);\n  }, [slug]);\n  if (!postData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: postData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [postData.authorImage !== undefined && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: urlFor(postData.authorImage).width(100).url(),\n          alt: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: postData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: urlFor(postData.mainImage).width(200).url(),\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BlockContent, {\n        blocks: postData.body,\n        projectId: sanityClient.clientConfig.projectId,\n        dataset: sanityClient.clientConfig.dataset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OnePost, \"LT2FpeEDjRt/mFsJ6Xl7JgbHXFo=\", false, function () {\n  return [useParams];\n});\n\n_c = OnePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnePost\");","map":{"version":3,"sources":["/Users/claudiaromeo/Documents/Projects/lcp-portfolio/src/components/OnePost.js"],"names":["React","useEffect","useState","useParams","sanityClient","BlockContent","imageUrlBuilder","builder","urlFor","source","image","OnePost","postData","setPostData","slug","fetch","then","data","catch","console","error","title","authorImage","undefined","width","url","name","mainImage","body","clientConfig","projectId","dataset"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,OAAO,GAAGD,eAAe,CAACF,YAAD,CAA/B;;AACA,SAASI,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,SAAOF,OAAO,CAACG,KAAR,CAAcD,MAAd,CAAP;AACD;;AAED,eAAe,SAASE,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWX,SAAS,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CACTW,KADH,CAEK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAdI,EAeI;AAAED,MAAAA;AAAF,KAfJ,EAiBGE,IAjBH,CAiBSC,IAAD,IAAUJ,WAAW,CAACI,IAAI,CAAC,CAAD,CAAL,CAjB7B,EAkBGC,KAlBH,CAkBSC,OAAO,CAACC,KAlBjB;AAmBD,GApBQ,EAoBN,CAACN,IAAD,CApBM,CAAT;AAsBA,MAAI,CAACF,QAAL,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEf,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA,kBAAKA,QAAQ,CAACS;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBACGT,QAAQ,CAACU,WAAT,KAAyBC,SAAzB,iBAAqC;AACpC,UAAA,GAAG,EAAEf,MAAM,CAACI,QAAQ,CAACU,WAAV,CAAN,CAA6BE,KAA7B,CAAmC,GAAnC,EAAwCC,GAAxC,EAD+B;AAEpC,UAAA,GAAG,EAAC;AAFgC;AAAA;AAAA;AAAA;AAAA,gBADxC,eAKE;AAAA,oBAAKb,QAAQ,CAACc;AAAd;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,GAAG,EAAElB,MAAM,CAACI,QAAQ,CAACe,SAAV,CAAN,CAA2BH,KAA3B,CAAiC,GAAjC,EAAsCC,GAAtC,EAAV;AAAuD,MAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,MAAM,EAAEb,QAAQ,CAACgB,IADnB;AAEE,QAAA,SAAS,EAAExB,YAAY,CAACyB,YAAb,CAA0BC,SAFvC;AAGE,QAAA,OAAO,EAAE1B,YAAY,CAACyB,YAAb,CAA0BE;AAHrC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlDuBpB,O;UAELR,S;;;KAFKQ,O","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport imageUrlBuilder from \"@sanity/image-url\";\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport default function OnePost() {\n  const [postData, setPostData] = useState(null);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[slug.current == $slug]{\n          title,\n          slug,\n          mainImage{\n            asset->{\n              _id,\n              url\n             }\n           },\n         body,\n        \"name\": author->name,\n        \"authorImage\": author->image\n       }`,\n        { slug }\n      )\n      .then((data) => setPostData(data[0]))\n      .catch(console.error);\n  }, [slug]);\n\n  if (!postData) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <div>\n        <h2>{postData.title}</h2>\n        <div>\n          {postData.authorImage !== undefined &&<img\n            src={urlFor(postData.authorImage).width(100).url()}\n            alt=\"Author\"\n          />}\n          <h4>{postData.name}</h4>\n        </div>\n      </div>\n      <img src={urlFor(postData.mainImage).width(200).url()} alt=\"\" />\n      <div>\n        <BlockContent\n          blocks={postData.body}\n          projectId={sanityClient.clientConfig.projectId}\n          dataset={sanityClient.clientConfig.dataset}\n        />\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}